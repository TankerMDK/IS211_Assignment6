In interpreting Part 4 of the assignment, I discovered/re-discovered the lambda function. I know I've used it before.
However, this time, I've learned how it goes even further BEYOND. The code for conversions_refactored.py can be improved
by implementing the following code instead. What it does is that it cleans up the code by reducing the repetitiveness
and it's easier to extend by adding to the conversion dictionary. The code follows:

class ConversionNotPossible(Exception):
    pass

# Define conversion formulas using lambda
conversions = {
    ('Celsius', 'Fahrenheit'): lambda c: (c * 9/5) + 32,
    ('Celsius', 'Kelvin'): lambda c: c + 273.15,
    ('Fahrenheit', 'Celsius'): lambda f: (f - 32) * 5/9,
    ('Fahrenheit', 'Kelvin'): lambda f: (f - 32) * 5/9 + 273.15,
    ('Kelvin', 'Celsius'): lambda k: k - 273.15,
    ('Kelvin', 'Fahrenheit'): lambda k: (k - 273.15) * 9/5 + 32
}

def convert(fromUnit, toUnit, value):
    if fromUnit == toUnit:
        return value

    try:
        return conversions[(fromUnit, toUnit)](value)
    except KeyError:
        raise ConversionNotPossible(f"Cannot convert from {fromUnit} to {toUnit}.")
